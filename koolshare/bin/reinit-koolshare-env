#!/bin/bash


alias echo_date='echo $(date +%Y年%m月%d日\ %X)'
export KSROOT=/koolshare
source $KSROOT/scripts/base.sh
eval `dbus export swap_`
USB_JFFS_SPEED_W=5
UDPXY_URI="http://192.168.50.1:4022"
SS_TA="/koolshare/ss/ssconfig.sh /koolshare/ss/rules/dnsmasq.postconf"

add_bash() {
    if [[ ! -f /tmp/profile ]];then
        cat <<EOF >> /tmp/profile
#!/bin/bash

export TIME_STYLE=long-iso
export TERM=xterm
alias vim='vim -u /opt/.vimrc'
alias ll='ls -Al -h --color=auto'
alias wget='wget --no-check-certificate'
alias acme='/koolshare/acme/acme.sh --home /koolshare/acme'

color_my_prompt() {
    local __user_and_host="\[\033[01;32m\]\u@\h"
    local __cur_location="\[\033[01;34m\]\w"
    local __git_branch_color="\[\033[31m\]"
    local __git_branch="\$(git branch 2> /dev/null | grep -e ^* | sed -E  s/^\\\\\\\\\\*\ \(.+\)$/\(\\\\\\\\\\1\)\ /)"
    local __prompt_tail="\[\033[35m\]$"
    local __last_color="\[\033[00m\]"
    export PS1="\$__user_and_host \$__cur_location \$__git_branch_color\$__git_branch\$__prompt_tail\$__last_color "
}
color_my_prompt
EOF
        chmod +x /tmp/profile
    fi
    if [[ -f /tmp/profile && -f /jffs/etc/profile && $(grep -c '/tmp/profile' /jffs/etc/profile) -eq 0 ]];then
        sed -i '/\/tmp\/profile/d' /jffs/etc/profile
        echo "[ -f /tmp/profile ] && . /tmp/profile" >> /jffs/etc/profile
    fi
}

unlock_extensions() {
    sed -i 's/\tdetect_package/\t# detect_package/g' /koolshare/scripts/ks_tar_install.sh
}

unlimit_usb() {
    # unlimit usb2jffs write speed 50MB/s to 10MB/s
    sed -r -i "s/^(W_LIMIT)=(.*)$/\1=${USB_JFFS_SPEED_W}/g" /koolshare/scripts/usb2jffs_config.sh
    sed -r -i "s/^(W_LIMIT)=(.*)$/\1=${USB_JFFS_SPEED_W}/g" /koolshare/scripts/swap_make.sh
}

mod_aria2() {
    sed -i "/ss\.txt/d" /koolshare/scripts/aria2_config.sh
}

clean_mem() {
    logger "clean mem"
    /bin/sync && echo 1 > /proc/sys/vm/drop_caches && sleep 1
    #swapoff -e "$swap_auto_mount" && swapon -e "$swap_auto_mount"
}

restart_apps() {
    service restart_httpd && curl ${UDPXY_URI}/restart &&sleep 1
    clean_mem
}

upgrade_acme() {
    if [ -f /koolshare/acme/acme.sh ];then
        sh /koolshare/acme/acme.sh --home /koolshare/acme --upgrade --auto-upgrade 0
    fi
}

update_ss_dns_china_user() {
    target=${1}
    if [[ $(grep -n -A 1 'ss_dns_china_user' ${target} | grep -c 'kingour_custom') -eq 0 ]];then
        line=$(grep -n -A 1 'ss_dns_china_user' ${target}  | grep -oE "^[0-9]+:" | grep -oE "[0-9]+")
        sed -i "${line}a\       #kingour_custom" ${target}
        let line=line+1
        sed -i "${line}a\       if [[ \$(echo \$ss_dns_china_user | grep ':' | wc -l) -eq 1 ]];then CDN=\$(echo \$ss_dns_china_user|awk -F':' '{print \$1}');DNSC_PORT=\$(echo \$ss_dns_china_user|awk -F':' '{print \$2}');fi" ${target}
    fi
}

custom_ss() {
    for key in $SS_TA;do
        update_ss_dns_china_user $key
    done
}

main() {
    add_bash
    unlock_extensions
    unlimit_usb
    mod_aria2
    custom_ss
    restart_apps
}

case $1 in
    add_bash|unlock_extensions|unlimit_usb|restart_apps|upgrade_acme|clean_mem|custom_ss|main)
        eval $1
    ;;
    *)
        echo "Usage: $0 {main|add_bash|unlock_extensions|unlimit_usb|restart_apps|upgrade_acme|clean_mem|custom_ss}"
        exit 0
    ;;
esac